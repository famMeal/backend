"""
Autogenerated input type of Create
"""
input CreateInput {
  active: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
  price: Float!
  restaurantId: ID!
}

"""
Autogenerated return type of Create.
"""
type CreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  meal: Meal
}

"""
Autogenerated input type of Delete
"""
input DeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  mealId: ID!
}

"""
Autogenerated return type of Delete.
"""
type DeletePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  meal: Meal
}

type Meal {
  active: Boolean!
  description: String
  id: ID!
  name: String!
  orderCutoffTime: String!
  orderStartTime: String!
  pickupEndTime: String!
  pickupStartTime: String!
  price: Float!
  quantityAvailable: Int!
  restaurant: Restaurant
}

type Mutation {
  mealCreate(
    """
    Parameters for Create
    """
    input: CreateInput!
  ): CreatePayload
  mealDelete(
    """
    Parameters for Delete
    """
    input: DeleteInput!
  ): DeletePayload
  mealUpdate(
    """
    Parameters for Update
    """
    input: UpdateInput!
  ): UpdatePayload
}

type Order {
  id: ID!
  meal: Meal
  pickupEndTime: String
  pickupStartTime: String
  quantity: Int
  restaurant: Restaurant
  status: String
  subtotal: Float
  tipAmount: Float
  total: Float
  user: User
}

type Query {
  meal(id: ID!): Meal
  meals: [Meal!]!
  order(id: ID!): Order
  restaurant(id: ID!): Restaurant
  restaurants: [Restaurant!]!
  user(id: ID!): User
}

type Restaurant {
  addressLine1: String
  addressLine2: String
  city: String
  country: String
  id: ID!
  latitude: Float
  longitude: Float
  meals: [Meal!]!
  name: String!
  orders: [Order!]!
  postalCode: String
  province: String
  restaurantSetting: RestaurantSetting
  users: [User!]!
}

type RestaurantSetting {
  byobTupperware: Boolean
  id: ID!
  orderCutoffTime: String
  orderStartTime: String
  pickupEndTime: String
  pickupStartTime: String
  quantityAvailable: Int
}

"""
Autogenerated input type of Update
"""
input UpdateInput {
  active: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  mealId: ID!
  name: String
  price: Float
}

"""
Autogenerated return type of Update.
"""
type UpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  meal: Meal
}

type User {
  email: String!
  firstName: String
  id: ID!
  isStoreOwner: Boolean
  lastName: String
  orders: [Order!]!
  restaurant: Restaurant
}
