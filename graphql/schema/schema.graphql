"""
Autogenerated input type of AddToCart
"""
input AddToCartInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  mealId: ID!
  pickupEndTime: String!
  pickupStartTime: String!
  quantity: Int
  userId: ID!
}

"""
Autogenerated return type of AddToCart.
"""
type AddToCartPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  order: Order
}

"""
Autogenerated input type of Create
"""
input CreateInput {
  active: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  name: String!
  price: Float!
  restaurantId: ID!
}

"""
Autogenerated input type of CreateOrUpdateStripeAccount
"""
input CreateOrUpdateStripeAccountInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateOrUpdateStripeAccount.
"""
type CreateOrUpdateStripeAccountPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  redirectLink: String
}

"""
Autogenerated return type of Create.
"""
type CreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  meal: Meal
}

type Credential {
  accessToken: String!
  client: String!
  expiry: Int!
  tokenType: String!
  uid: String!
}

enum DateRangeField {
  """
  Filters for all orders except todays
  """
  NOT_TODAY

  """
  Filters for todays order
  """
  TODAY
}

"""
Autogenerated input type of Delete
"""
input DeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  mealId: ID!
}

"""
Autogenerated input type of DeleteOrder
"""
input DeleteOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  orderId: ID!
}

"""
Autogenerated return type of DeleteOrder.
"""
type DeleteOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  order: Order
}

"""
Autogenerated return type of Delete.
"""
type DeletePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  meal: Meal
}

type Meal {
  active: Boolean!
  archived: Boolean!
  description: String
  id: ID!
  name: String!
  orderCutoffTime: String!
  orderStartTime: String!
  pickupEndTime: String!
  pickupStartTime: String!
  price: String!
  quantityAvailable: Int!
  restaurant: Restaurant
}

type Mutation {
  addToCart(
    """
    Parameters for AddToCart
    """
    input: AddToCartInput!
  ): AddToCartPayload
  createOrUpdateStripeAccount(
    """
    Parameters for CreateOrUpdateStripeAccount
    """
    input: CreateOrUpdateStripeAccountInput!
  ): CreateOrUpdateStripeAccountPayload
  deleteOrder(
    """
    Parameters for DeleteOrder
    """
    input: DeleteOrderInput!
  ): DeleteOrderPayload
  mealCreate(
    """
    Parameters for Create
    """
    input: CreateInput!
  ): CreatePayload
  mealDelete(
    """
    Parameters for Delete
    """
    input: DeleteInput!
  ): DeletePayload
  mealUpdate(
    """
    Parameters for Update
    """
    input: UpdateInput!
  ): UpdatePayload
  placeOrder(
    """
    Parameters for PlaceOrder
    """
    input: PlaceOrderInput!
  ): PlaceOrderPayload
  signUp(confirmUrl: String, email: String!, password: String!, passwordConfirmation: String!, restaurantName: String): SignUpPayload
  updateAllOrdersStatus(
    """
    Parameters for UpdateAllOrdersStatus
    """
    input: UpdateAllOrdersStatusInput!
  ): UpdateAllOrdersStatusPayload
  updateOrder(
    """
    Parameters for UpdateOrder
    """
    input: UpdateOrderInput!
  ): UpdateOrderPayload
  updateRestaurantSetting(
    """
    Parameters for UpdateSetting
    """
    input: UpdateSettingInput!
  ): UpdateSettingPayload
  userConfirmRegistrationWithToken(confirmationToken: String!): UserConfirmRegistrationWithTokenPayload
  userLogin(email: String!, password: String!): UserLoginPayload
  userLogout: UserLogoutPayload
  userRegister(confirmUrl: String, email: String!, password: String!, passwordConfirmation: String!): UserRegisterPayload
  userResendConfirmationWithToken(confirmUrl: String!, email: String!): UserResendConfirmationWithTokenPayload
  userSendPasswordResetWithToken(email: String!, redirectUrl: String!): UserSendPasswordResetWithTokenPayload
  userUpdatePasswordWithToken(password: String!, passwordConfirmation: String!, resetPasswordToken: String!): UserUpdatePasswordWithTokenPayload
  verifyAccount(confirmationToken: String!, email: String!): VerifyAccountPayload
}

type Order {
  createdAt: String
  id: ID!
  meal: Meal
  orderPlacedAt: String
  pickupEndTime: String
  pickupStartTime: String
  quantity: Int
  restaurant: Restaurant
  status: String
  subtotal: String
  taxes: String
  tipAmount: String
  tipPercentage: Int
  total: String
  user: User
}

enum OrderStatusField {
  """
  Filters for orders with the status cancelled
  """
  CANCELLED

  """
  Filters for orders with the status cart
  """
  CART

  """
  Filters for orders with the status completed
  """
  COMPLETED

  """
  Filters for orders with the status payment_failed
  """
  PAYMENT_FAILED

  """
  Filters for orders with the status picked_up
  """
  PICKED_UP

  """
  Filters for orders with the status preparing
  """
  PREPARING

  """
  Filters for orders with the status ready
  """
  READY
}

input OrdersFilterObject {
  """
  Returns todays or not todays orders
  """
  dateRange: DateRangeField

  """
  Filter by status
  """
  statusList: [OrderStatusField!]
}

"""
Autogenerated input type of PlaceOrder
"""
input PlaceOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  orderId: ID!
  pickupEndTime: String
  pickupStartTime: String
  quantity: Int
}

"""
Autogenerated return type of PlaceOrder.
"""
type PlaceOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  order: Order
}

type Query {
  currentUser: User
  meal(id: ID!): Meal
  meals: [Meal!]!
  order(id: ID!): Order
  restaurant(id: ID!): Restaurant
  restaurants: [Restaurant!]!
  user(id: ID!): User
}

type Restaurant {
  addressLine1: String
  addressLine2: String
  city: String
  country: String
  hasStripeAccount: Boolean!
  id: ID!
  latitude: Float
  longitude: Float
  meals: [Meal!]!
  name: String!
  orders(filters: OrdersFilterObject): [Order!]!
  postalCode: String
  province: String
  restaurantSetting: RestaurantSetting
  users: [User!]!
}

type RestaurantSetting {
  id: ID!
  orderCutoffTime: String
  orderStartTime: String
  pickupEndTime: String
  pickupStartTime: String
  quantityAvailable: Int
}

"""
Autogenerated return type of SignUp.
"""
type SignUpPayload {
  authenticatable: User

  """
  Authentication credentials. Null if after signUp resource is not active for
  authentication (e.g. Email confirmation required).
  """
  credentials: Credential
}

"""
Autogenerated input type of UpdateAllOrdersStatus
"""
input UpdateAllOrdersStatusInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  fromStatus: OrderStatusField!
  restaurantId: ID!
  toStatus: OrderStatusField!
}

"""
Autogenerated return type of UpdateAllOrdersStatus.
"""
type UpdateAllOrdersStatusPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  orders: [Order!]
}

"""
Autogenerated input type of Update
"""
input UpdateInput {
  active: Boolean

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  mealId: ID!
  name: String
  price: Float
}

"""
Autogenerated input type of UpdateOrder
"""
input UpdateOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  orderId: ID!
  pickupEndTime: String
  pickupStartTime: String
  quantity: Int
  status: OrderStatusField
  tipAmount: Float
  tipPercentage: Int
}

"""
Autogenerated return type of UpdateOrder.
"""
type UpdateOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  order: Order
}

"""
Autogenerated return type of Update.
"""
type UpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  meal: Meal
}

"""
Autogenerated input type of UpdateSetting
"""
input UpdateSettingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  orderCutoffTime: String
  orderStartTime: String
  pickupEndTime: String
  pickupStartTime: String
  quantityAvailable: Int
  restaurantId: ID!
}

"""
Autogenerated return type of UpdateSetting.
"""
type UpdateSettingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  restaurantSetting: RestaurantSetting
}

type User {
  email: String!
  firstName: String
  id: ID!
  isStoreOwner: Boolean
  lastName: String
  orders(filters: OrdersFilterObject): [Order!]!
  restaurant: Restaurant
}

"""
Autogenerated return type of UserConfirmRegistrationWithToken.
"""
type UserConfirmRegistrationWithTokenPayload {
  authenticatable: User!

  """
  Authentication credentials. Null unless user is signed in after confirmation.
  """
  credentials: Credential
}

"""
Autogenerated return type of UserLogin.
"""
type UserLoginPayload {
  authenticatable: User!
  credentials: Credential!
}

"""
Autogenerated return type of UserLogout.
"""
type UserLogoutPayload {
  authenticatable: User!
}

"""
Autogenerated return type of UserRegister.
"""
type UserRegisterPayload {
  authenticatable: User!

  """
  Authentication credentials. Null if after signUp resource is not active for
  authentication (e.g. Email confirmation required).
  """
  credentials: Credential
}

"""
Autogenerated return type of UserResendConfirmationWithToken.
"""
type UserResendConfirmationWithTokenPayload {
  message: String!
}

"""
Autogenerated return type of UserSendPasswordResetWithToken.
"""
type UserSendPasswordResetWithTokenPayload {
  message: String!
}

"""
Autogenerated return type of UserUpdatePasswordWithToken.
"""
type UserUpdatePasswordWithTokenPayload {
  authenticatable: User!

  """
  Authentication credentials. Resource must be signed_in for credentials to be returned.
  """
  credentials: Credential
}

"""
Autogenerated return type of VerifyAccount.
"""
type VerifyAccountPayload {
  authenticatable: User

  """
  Authentication credentials. Null unless user is signed in after confirmation.
  """
  credentials: Credential
}
